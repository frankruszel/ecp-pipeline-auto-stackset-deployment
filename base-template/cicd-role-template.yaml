AWSTemplateFormatVersion: "2010-09-09"
Description: IAM Roles for OU CI/CD pipeline

Parameters:
  ResourceNamePrefix:
    Description: Please specify the prefix for all the resources
    Type: String
    Default: ""

  # TESTApprovalSNSARN:
  #   Description: Please specify SNS Topic ARN for TEST Approval Communication
  #   Type: String
  #   Default: ""

  # ProdApprovalSNSARN:
  #   Description: Please specify SNS Topic ARN for Production Approval Communication
  #   Type: String
  #   Default: ""
  
  PermissionBoundaryARN:
    Description: Please specify Permission Boundary Policy ARN
    Type: String
    Default: ""    
  
  ManagementAccount:
    Description: "Please specify Management Account ID"
    Type: String
    Default: ""

Resources:
  CrossAccountCodePipelineApproverRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ResourceNamePrefix}-cross-account-codepipeline-approver-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${ManagementAccount}:root'
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineApproverAccess

  GithubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub ${ResourceNamePrefix}-GithubConnection
      ProviderType: GitHub

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ResourceNamePrefix}-codepipeline-role'
      PermissionsBoundary: !Ref PermissionBoundaryARN
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        
  CodePipelineRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ResourceNamePrefix}-codepipeline-role-policy'
      PolicyDocument:
        Statement:
          -
            Effect: Allow
            Action:
              - codepipeline:*
              - cloudformation:*
              - iam:ListRoles
              - iam:PassRole
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
              - sns:Publish
            Resource: "*"
          -
            Effect: "Allow"
            Action:
              - codestar-connections:UseConnection
            Resource:
              - !Ref GithubConnection
          -
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: "*"
          -
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
              - s3:ListAllMyBuckets
              - s3:GetBucketLocation
            Resource: "*"
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              - !GetAtt CodePipelineEventsRole.Arn
              - !GetAtt CodePipelineBuildProjectRole.Arn
              - !GetAtt CodePipelineTESTApprovalActionRole.Arn
              - !GetAtt CodePipelineProdApprovalActionRole.Arn
        Version: "2012-10-17"
      Roles:
        - Ref: CodePipelineRole
        
  CodePipelineEventsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ResourceNamePrefix}-cicd-events-role'
      PermissionsBoundary: !Ref PermissionBoundaryARN
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
        
  CodePipelineEventsRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ResourceNamePrefix}-cicd-events-role-policy'
      PolicyDocument:
        Statement:
          - Action: codepipeline:StartPipelineExecution
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Roles:
        - Ref: CodePipelineEventsRole
      
  CodePipelineBuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ResourceNamePrefix}-build-project-role'
      PermissionsBoundary: !Ref PermissionBoundaryARN
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
        
  CodePipelineBuildProjectRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ResourceNamePrefix}-build-project-role-policy'
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - ":log-group:/aws/codebuild/*"
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - ":log-group:/aws/codebuild/*:*"
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":report-group/*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource: "*"
          - Action:
              - cloudformation:*
              - organizations:ListDelegatedAdministrators
            Resource: "*"
            Effect: Allow
        Version: "2012-10-17"
      Roles:
        - Ref: CodePipelineBuildProjectRole
        
# Below two approval roles must be deleted when actual roles are in place
  CodePipelineTESTApprovalActionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ResourceNamePrefix}-test-approval-action-role'
      PermissionsBoundary: !Ref PermissionBoundaryARN
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - ":root"
        Version: "2012-10-17"

  CodePipelineTESTApprovalActionRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ResourceNamePrefix}-test-approval-action-role-policy'
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource: 
              !ImportValue TESTApprovalTopicArn
        Version: "2012-10-17"
      Roles:
        - Ref: CodePipelineTESTApprovalActionRole
          
  CodePipelineProdApprovalActionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ResourceNamePrefix}-prod-approval-action-role'
      PermissionsBoundary: !Ref PermissionBoundaryARN
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - ":root"
        Version: "2012-10-17"
        
  CodePipelineProdApprovalActionRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ResourceNamePrefix}-prod-approval-action-role-policy'
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource: 
              !ImportValue ProdApprovalTopicArn
        Version: "2012-10-17"
      Roles:
        - Ref: CodePipelineProdApprovalActionRole

Outputs:
  CodePipelineRoleOutput:
    Description: Code Pipeline Role ARN 
    Value: !GetAtt CodePipelineRole.Arn
    Export:
      Name: "CodePipelineRoleOutput"
  CodePipelineBuildProjectRoleOutput:
    Description: Code Build Project Role ARN 
    Value: !GetAtt CodePipelineBuildProjectRole.Arn
    Export:
      Name: "CodePipelineBuildProjectRoleOutput"
  CodePipelineEventsRoleOutput:
    Description: CloudWatch Event Role ARN 
    Value: !GetAtt CodePipelineEventsRole.Arn
    Export:
      Name: "CodePipelineEventsRoleOutput"
  GithubConnection:
    Description: GithubConnection resource
    Value: !Ref GithubConnection
    Export:
      Name: GithubConnection

